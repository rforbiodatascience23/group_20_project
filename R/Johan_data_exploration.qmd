---
title: "Johan_data_exploration"
format: pdf
editor: visual
---

##

```{r}
# Top 10 subcellular_location in Human
cc_human_top <- joined_data |>
  select(entry, `subcellular_location_[cc]`, organism) |> 
  distinct() |>
  filter(str_detect(organism, "Human")) |> 
  count(`subcellular_location_[cc]`) |> 
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

# Top 10 subcellular location in Mouse
cc_mouse_top <- joined_data |>
  select(entry, `subcellular_location_[cc]`, organism) |> 
  distinct() |>
  filter(str_detect(organism, "Mouse")) |> 
  count(`subcellular_location_[cc]`) |>
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

cc_human_top
cc_mouse_top
```

```{r}
# Top 10 GO in Human
go_human_top <- joined_data |>
  select(entry, GO_molecular_function, organism) |> 
  distinct() |>
  filter(organism == "Human") |> 
  count(`GO_molecular_function`) |> 
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

# Top 10 GO in Mouse
go_mouse_top <- joined_data |>
  select(entry, GO_molecular_function, organism) |> 
  distinct() |>
  filter(str_detect(organism, "Mouse")) |> 
  count(`GO_molecular_function`) |>
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

go_human_top
go_mouse_top
```


```{r}
# Top 10 enzyme_class in Human
ec_human_top <- joined_data |>
  select(entry, enzyme_class, organism) |> 
  distinct() |>
  filter(str_detect(organism, "Human")) |> 
  count(`enzyme_class`) |> 
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

# Top 10 enzyme_class in Mouse
ec_mouse_top <- joined_data |>
  select(entry, enzyme_class, organism) |> 
  distinct() |>
  filter(str_detect(organism, "Mouse")) |> 
  count(`enzyme_class`) |>
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

ec_human_top
ec_mouse_top
```


```{r}
# Top 10 protein_family in Human
proteinfam_human_top <- joined_data |>
  select(entry, protein_family, organism) |> 
  distinct() |>
  filter(str_detect(organism, "Human")) |> 
  count(`protein_family`) |> 
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

# Top 10 protein_family in Mouse
proteinfam_mouse_top <- joined_data |>
  select(entry, protein_family, organism) |> 
  distinct() |>
  filter(str_detect(organism, "Mouse")) |> 
  count(`protein_family`) |>
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

proteinfam_human_top
proteinfam_mouse_top
```



```{r}
# Top 10 cofactor in Human
cofactor_human_top <- joined_data |>
  select(entry, cofactor, organism) |> 
  distinct() |>
  filter(str_detect(organism, "Human")) |> 
  count(`cofactor`) |> 
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

# Top 10 cofactor in Mouse
cofactor_mouse_top <- joined_data |>
  select(entry, cofactor, organism) |> 
  distinct() |>
  filter(str_detect(organism, "Mouse")) |> 
  count(`cofactor`) |>
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

cofactor_human_top
cofactor_mouse_top
```


```{r}
# Top 10 pathways in Human
path_human_top <- joined_data |>
  select(entry, pathway, organism) |> 
  distinct() |>
  filter(organism == "Human") |> 
  count(pathway) |> 
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

# Top 10 pathways location in Mouse
path_mouse_top <- joined_data |>
  select(entry, pathway, organism) |> 
  distinct() |>
  filter(organism == "Mouse") |> 
  count(pathway) |>
  arrange(desc(n)) |> 
  drop_na() |> 
  top_n(n = 10)

path_human_top
path_mouse_top
```

```{r}
# All pathways
path_all <- joined_data |>
  select(entry, pathway) |> 
  distinct() |>
  count(pathway) |>
  arrange(desc(n)) |> 
  drop_na()

path_all

```










```{r}
joined_data |>
  ggplot(mapping = aes(x = organism, fill = organism)) +
  geom_bar() +
  theme_minimal(base_family = "avenir",
                base_size = 12) +
  theme_bw() +
  theme(legend.position = "bottom") +
  theme(axis.title.y = element_text(angle = 0, 
                                    vjust = 0.5, 
                                    size = 7),
        axis.text.x = element_text(angle = 0, 
                                   hjust = 1, 
                                   size = 10),
        axis.title.x = element_blank()) +
  labs(
    title = "Total count of human and mouse",
    y = "Count",
    fill = "Organism"
  )
```



```{r}
joined_data |>
  ggplot(aes(x = length, fill = organism)) +
  xlim(0, 2500) +
  geom_density(alpha = 0.5) +
  theme_bw()
```



```{r}
joined_data |>
  ggplot(aes(x = mass, fill = organism)) +
  xlim(0, 300000) +
  geom_density(alpha = 0.5) +
  theme_bw()
```




```{r}
joined_data |>
  filter(`subcellular_location_[cc]` == c("cytoplasm", "nucleus", "cell membrane", "secreted", "membrane", "endoplasmic reticulum membrane", "mitochondrion", "mitochondrion inner membrane", "golgi apparatus membrane", "cell projection")) |> 
  ggplot(mapping = aes(x = `subcellular_location_[cc]`, fill = organism)) +
  geom_bar() +
  theme_bw(base_family = "avenir",
                base_size = 12) +
  theme(legend.position = "bottom") +
  theme(axis.title.y = element_text(angle = 0, 
                                    vjust = 0.5, 
                                    size = 7),
        axis.text.x = element_text(angle = 45, 
                                   hjust = 1, 
                                   size = 10)) +
  labs(
    title = "Top 10 subcellular locations",
    x = "Subcellular location",
    y = "Count"
  )
```



```{r}
joined_data |>
  filter(`subcellular_location_[cc]` == c("cytoplasm", "nucleus", "cell membrane", "secreted", "membrane", "endoplasmic reticulum membrane", "mitochondrion", "mitochondrion inner membrane", "golgi apparatus membrane", "cell projection")) |>
  drop_na(enzyme_class) |> 
  ggplot(mapping = aes(x = `subcellular_location_[cc]`, fill = enzyme_class)) +
  geom_bar() +
  theme_minimal(base_family = "avenir",
                base_size = 12) +
  theme(legend.position = "bottom") +
  theme(axis.title.y = element_text(angle = 0, 
                                    vjust = 0.5, 
                                    size = 7),
        axis.text.x = element_text(angle = 45, 
                                   hjust = 1, 
                                   size = 10)) +
  labs(
    title = "Top 10 subcellular locations",
    x = "Subcellular location",
    y = "Count"
  )
```

# note for comitting
